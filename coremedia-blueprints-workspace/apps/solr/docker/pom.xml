<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.coremedia.blueprint</groupId>
    <artifactId>solr.blueprint-parent</artifactId>
    <version>1-SNAPSHOT</version>
    <relativePath>../blueprint-parent/pom.xml</relativePath>
  </parent>

  <groupId>com.coremedia.blueprint.docker</groupId>
  <artifactId>solr.blueprint-spring-boot-docker</artifactId>
  <packaging>pom</packaging>

  <properties>
    <!-- keep this version in sync with this poms parent version, you cannot not use ${project.parent.version} here -->
    <blueprint.groupId>com.coremedia.blueprint</blueprint.groupId>
    <blueprint.version>${project.version}</blueprint.version>

    <blueprint.boot.groupId>com.coremedia.blueprint.boot</blueprint.boot.groupId>
    <blueprint.boot.version>${project.version}</blueprint.boot.version>

    <!--this property can be either an organisational prefix or a complete registry prefix-->
    <docker.repository.prefix>coremedia</docker.repository.prefix>
    <!--this property must be unique for each image-->
    <docker.repository.suffix>${project.build.finalName}</docker.repository.suffix>
    <docker.image.tag>latest</docker.image.tag>
    <!--used as docker build args-->
    <docker.solr-base-image.tag>8.4.0-slim</docker.solr-base-image.tag>
    <docker.solr-base-image.repo>solr</docker.solr-base-image.repo>
    <prometheus-agent.version>0.3.1</prometheus-agent.version>

    <application-plugin.version>2.7.10</application-plugin.version>
  </properties>

  <modules>
    <module>solr</module>
  </modules>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.spotify</groupId>
          <artifactId>dockerfile-maven-plugin</artifactId>
          <version>1.4.4</version>
          <!-- Workaround for Java 11. See https://github.com/spotify/dockerfile-maven/issues/163 -->
          <dependencies>
            <dependency>
              <groupId>org.codehaus.plexus</groupId>
              <artifactId>plexus-archiver</artifactId>
              <version>3.4</version>
            </dependency>
            <dependency>
              <groupId>com.sun.activation</groupId>
              <artifactId>jakarta.activation</artifactId>
              <version>1.2.1</version>
            </dependency>
          </dependencies>
          <configuration>
            <!--if set to true you cannot build offline-->
            <pullNewerImage>false</pullNewerImage>
            <!--via repository the complete image name is defined-->
            <repository>${docker.repository.prefix}/${docker.repository.suffix}</repository>
            <useMavenSettingsForAuth>false</useMavenSettingsForAuth>
            <tag>${docker.image.tag}</tag>
            <buildArgs combine.children="append">
              <SOLR_BASE_IMAGE_TAG>${docker.solr-base-image.tag}</SOLR_BASE_IMAGE_TAG>
              <SOLR_BASE_IMAGE_REPO>${docker.solr-base-image.repo}</SOLR_BASE_IMAGE_REPO>
              <PROMETHEUS_AGENT_VERSION>${prometheus-agent.version}</PROMETHEUS_AGENT_VERSION>
            </buildArgs>
          </configuration>
          <executions>
            <!--
             | you can skip the whole docker process using the system property dockerfile.skip
             -->
            <execution>
              <!--
               | you can skip building the image using the system property dockerfile.build.skip
               -->
              <id>docker-build</id>
              <goals>
                <goal>build</goal>
              </goals>
              <phase>install</phase>
            </execution>
            <execution>
              <id>docker-push</id>
              <!--
               | you can skip pushing the image using the system property dockerfile.push.skip
               -->
              <goals>
                <goal>push</goal>
              </goals>
              <phase>deploy</phase>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>1.4.1</version>
          <configuration>
            <skip>true</skip>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <inherited>false</inherited>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
