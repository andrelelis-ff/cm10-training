<?xml version="1.0" encoding="UTF-8"?>
<ec:AbstractCatalogList
        xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:exml="http://www.jangaroo.net/exml/0.8"
        xmlns="exml:ext.config"
        xmlns:u="exml:untyped"
        xmlns:ui="exml:com.coremedia.ui.config"
        xmlns:editor="exml:com.coremedia.cms.editor.sdk.config"
        xmlns:ec="exml:com.coremedia.ecommerce.studio.config" xmlns:plugins="com.coremedia.ui.plugins.*"
        emptyText="{resourceManager.getString('com.coremedia.cms.editor.Editor', 'CollectionView_emptySearch_text')}"
        header="{false}"
        ddGroup="ContentDD">
  <fx:Metadata>
    [ResourceBundle('com.coremedia.cms.editor.Editor')]
    [ResourceBundle('com.coremedia.cms.editor.sdk.columns.grid.GridColumns')]
    [ResourceBundle('com.coremedia.ecommerce.studio.ECommerceStudioPlugin')]
  </fx:Metadata>
  <fx:Script><![CDATA[
    import com.coremedia.cms.editor.sdk.util.RichTextPlainTextTransformer;
    import com.coremedia.ecommerce.studio.helper.AugmentationUtil;
    import com.coremedia.ecommerce.studio.helper.CatalogHelper;
    import com.coremedia.ecommerce.studio.model.CatalogObject;
    import com.coremedia.ui.data.ValueExpression;
    import com.coremedia.ui.data.ValueExpressionFactory;

    public static const xtype:String = "com.coremedia.ecommerce.studio.config.catalogSearchList";

    /**
     * The itemId of the copy to system clipboard menu item.
     */
    public static const COPY_COLUMN_CONTENT_TO_SYSTEM_CLIPBOARD:String = "copyCellContentToSystemClipboard";

    private var catalogHelper:CatalogHelper;
    private var lastClickedCellVE:ValueExpression;

    // called by generated constructor code
    //noinspection JSUnusedLocalSymbols
    private function __initialize__():void {
      catalogHelper = CatalogHelper.getInstance();
      lastClickedCellVE = ValueExpressionFactory.createFromValue();
    }

    private var config:CatalogSearchList;

    public native function CatalogSearchList(config:CatalogSearchList = null);

    [Bindable]
    public var searchResultHitsValueExpression:ValueExpression;
    ]]></fx:Script>

  <ec:plugins exml:mode="prepend">
    <ui:BindListPlugin lazy="true"
                       bindTo="{config.searchResultHitsValueExpression}"
                       initialViewLimit="50"
                       viewLimitIncrement="100">
      <ui:fields>
        <ui:DataField name="type"
                      mapping=""
                      convert_="{AugmentationUtil.getTypeLabel}"/>
        <ui:DataField name="typeCls"
                      mapping=""
                      convert_="{AugmentationUtil.getTypeCls}"/>
        <ui:DataField name="id"
                      mapping="externalId"/>
        <ui:DataField name="name"
                      mapping=""
                      convert_="{catalogHelper.getDecoratedName}"/>
        <ui:DataField name="description"
                      mapping="shortDescription"
                      convert_="{function(v:String, catalogObject:CatalogObject):String {
                          return RichTextPlainTextTransformer.convertToPlainText(catalogObject.getShortDescription())}}"/>
      </ui:fields>
    </ui:BindListPlugin>
    <ui:ContextMenuPlugin lastClickedCellVE="{lastClickedCellVE}">
      <ui:contextMenu>
        <ec:CatalogSearchContextMenu selectedSearchItemsValueExpression="{config.selectedItemsValueExpression}">
          <ec:plugins exml:mode="append">
            <plugins:AddItemsPlugin>
              <plugins:items>
                <MenuItem itemId="{COPY_COLUMN_CONTENT_TO_SYSTEM_CLIPBOARD}">
                  <baseAction>
                    <editor:CopyCellContentToSystemClipboardAction lastClickedCellVE="{lastClickedCellVE}" selectedItemsValueExpression="{config.selectedItemsValueExpression}"/>
                  </baseAction>
                </MenuItem>
              </plugins:items>
            </plugins:AddItemsPlugin>
          </ec:plugins>
        </ec:CatalogSearchContextMenu>
      </ui:contextMenu>
    </ui:ContextMenuPlugin>
  </ec:plugins>
  <ec:columns>
    <editor:TypeIconColumn showTypeName="true"
                           sortable="true"
                           u:sortField="type"
                           width="125"/>
    <GridColumn
            header="{resourceManager.getString('com.coremedia.ecommerce.studio.ECommerceStudioPlugin', 'id_header')}"
            stateId="id"
            dataIndex="id"
            sortable="true"
            hideable="false"
            menuDisabled="true"
            width="125"/>
    <GridColumn
            header="{resourceManager.getString('com.coremedia.cms.editor.sdk.columns.grid.GridColumns', 'name_header')}"
            stateId="name"
            dataIndex="name"
            sortable="true"
            hideable="false"
            menuDisabled="true"
            width="200"/>
    <GridColumn
            header="{resourceManager.getString('com.coremedia.ecommerce.studio.ECommerceStudioPlugin', 'description_header')}"
            stateId="description"
            dataIndex="description"
            hideable="false"
            menuDisabled="true"
            flex="1"/>
  </ec:columns>
</ec:AbstractCatalogList>
