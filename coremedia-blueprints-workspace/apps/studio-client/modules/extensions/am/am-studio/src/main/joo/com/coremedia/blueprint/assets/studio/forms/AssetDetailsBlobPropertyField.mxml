<?xml version="1.0" encoding="UTF-8"?>
<!---
 A BlobPropertyField with an additional checkbox, which marks a blob as downloadable.
 This component displays the blob and its string properties with an hbox layout.
-->
<local:AssetDetailsBlobPropertyFieldBase
        xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:local="com.coremedia.blueprint.assets.studio.forms.*"
        xmlns:exml="http://www.jangaroo.net/exml/0.8"
        xmlns="exml:ext.config"
        xmlns:editor="exml:com.coremedia.cms.editor.sdk.config"
        xmlns:ui="exml:com.coremedia.ui.config"
        xmlns:u="exml:untyped">
  <fx:Metadata>
    [ResourceBundle('com.coremedia.blueprint.assets.studio.AMStudioPlugin')]
  </fx:Metadata>
  <fx:Script><![CDATA[
    public static const xtype:String = "com.coremedia.blueprint.assets.studio.config.assetDetailsBlobPropertyField";

    private var config:AssetDetailsBlobPropertyField;

    public native function AssetDetailsBlobPropertyField(config:AssetDetailsBlobPropertyField = null);
    ]]></fx:Script>
  <fx:Declarations>
    <!---
     An optional property name, which marks this blob's renditions as visible.
    -->
    <fx:String id="visiblePropertyName"/>
  </fx:Declarations>

  <local:plugins exml:mode="append">
    <ui:AddItemsPlugin applyTo="{findBlobDetailsContainer}">
      <ui:items>
        <Checkbox itemId="{CHECKBOX_ITEM_ID}"
                  boxLabel="{resourceManager.getString('com.coremedia.blueprint.assets.studio.AMStudioPlugin', 'Rendition_downloadable')}"
                  u:colspan="3">
          <plugins>
            <editor:BindDisablePlugin forceReadOnlyValueExpression="{config.forceReadOnlyValueExpression}"
                                      bindTo="{config.bindTo}"/>
            <ui:BindPropertyPlugin bindTo="{config.bindTo.extendBy('properties', config.visiblePropertyName)}"
                                   bidirectional="true"
                                   ifUndefined="{false}"
                                   transformer="{function(value:Number):Boolean { return !!value; } }"
                                   reverseTransformer="{function(checked:Boolean):* { return checked; }}"/>
            <editor:PropertyFieldPlugin propertyName="{config.visiblePropertyName}"/>
            <ui:BindVisibilityPlugin
                    bindTo="{getCheckboxVisibleVE(config.visiblePropertyName, config.bindTo, config.propertyName)}"/>
          </plugins>
        </Checkbox>
      </ui:items>
    </ui:AddItemsPlugin>
  </local:plugins>

</local:AssetDetailsBlobPropertyFieldBase>
