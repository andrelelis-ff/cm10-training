########################################################################################################################
# Spring Boot properties
########################################################################################################################
logging.file.name=${user.dir}/target/log/studio-server.log
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.rotate=false
server.tomcat.accesslog.buffered=false
server.tomcat.accesslog.directory=${user.dir}/target/log
server.tomcat.accesslog.file-date-format=
server.port=41080
management.server.port=41081
console.log.file=${user.dir}/target/log/studio-console.log
console.log.level=debug
########################################################################################################################
# Local development convenience property facade for:
# - remote endpoints
# - workspace locations
#
# set these properties on the command-line or in your IDE run configuration.
########################################################################################################################
installation.host=localhost
content-management-server.host=${installation.host}
cae-preview.host=${installation.host}
cae-live.host=${installation.host}
mongoDb.host=${installation.host}
solr.host=${installation.host}
wcs.host=${installation.host}

########################################################################################################################
# CoreMedia Application Properties for Development
#
# these properties should reference the convenience properties above for any remote endpoints
########################################################################################################################

# content-management-server repository url
repository.url=http://${content-management-server.host}:40180/ior
caplist=com.coremedia.cotopaxi.list.elastic.mongodb.MongoCapListConnectorFactory

# Solr Configuration:
solr.url=http://${solr.host}:40080/solr
solr.collection.cae=preview
solr.collection.content=studio
elastic.solr.url=http://${solr.host}:40080/solr

# MongoDB configuration:
mongoDb.clientURI=mongodb://coremedia:coremedia@${mongoDb.host}:27017
mongoDb.prefix=blueprint

studio.previewUrlPrefix=http://${cae-preview.host}:40980/blueprint/servlet
studio.previewUrlWhitelist=*.${cae-preview.host},http://${cae-preview.host}:40980,*.${wcs.host}:8000
# set to port 40980 to use preview-cae or 42180 to use live-cae directly
es.cae.http.port=42180
es.cae.http.host=${cae-live.host}
es.cae.protocol=http
# Sets a JMX remote url so that the webapp can be accessed via JMX when running with tomcat plugin.
# When running this application in a standalone tomcat, then the tomcat's built-in remote connector server
# can be used instead.
management.server.remote.url=service:jmx:rmi://localhost:41098/jndi/rmi://localhost:41099/studio
externalpreview.restUrl=http://${cae-preview.host}:40980/blueprint/servlet/service/externalpreview
externalpreview.previewUrl=http://${cae-preview.host}:40980/blueprint/externalpreview
externalpreview.urlPrefix=https://${cae-preview.host}:40980

themeImporter.apiKeyStore.basePath=${user.dir}/target/themeImporter/apiKeyStore
# the path where transformed blobs are cached, to keep the caches througout builds, you can point it to a directory
# outside of the workspace
com.coremedia.transform.blobCache.basePath=${user.dir}/target/blobCache

# The initial default URL prefix for our example sites
blueprint.site.mapping.calista=http://${cae-preview.host}:40980
blueprint.site.mapping.helios=http://${cae-preview.host}:40980
blueprint.site.mapping.corporate=http://${cae-preview.host}:40980

########################################################################################################################
# LiveContext properties
########################################################################################################################
# IBM
livecontext.service.credentials.username = cmadmin
livecontext.service.credentials.password = VTJjyo0AYSnXFHI201yo

livecontext.cookie.domain = .

livecontext.ibm.wcs.host = ${wcs.host}
livecontext.ibm.wcs.url = http://${livecontext.ibm.wcs.host}
livecontext.ibm.wcs.secureUrl = https://${livecontext.ibm.wcs.host}
livecontext.ibm.wcs.rest.search.url = http://${livecontext.ibm.wcs.host}:3737/search/resources
livecontext.ibm.wcs.rest.search.secureUrl = https://${livecontext.ibm.wcs.host}:3738/search/resources
livecontext.ibm.wcs.url-keyword = cm
livecontext.ibm.wcs.store.name.aurora = AuroraESite
livecontext.ibm.wcs.currency.aurora = USD
livecontext.ibm.wcs.vendor.aurora = ibm
livecontext.managementtool.web.url = https://${livecontext.ibm.wcs.host}:8000/lobtools/CoreMediaManagementCenterWrapper.html
livecontext.cache.invalidation.enabled=false

######################################################
# Commerce Hub Configuration                         #
######################################################

# Activate a 'commerce.hub.data.endpoints.*' property only when a commerce adapter connection is
# actually needed in local development. Activating all of these properties here by default would
# cause recurring connection attempts when the connected content server contains sides with
# commerce adapter connections activated, and the logs flooded with loads of connect exceptions).

# Mock
#commerce.hub.data.endpoints.mock=localhost:44065

# Salesforce
#commerce.hub.data.endpoints.sfcc=localhost:44165

# Hybris
#commerce.hub.data.endpoints.hybris=localhost:44265
commerce.hub.data.customEntityParams.catalogversion=Staged

# IBM
#commerce.hub.data.endpoints.wcs=localhost:44365

