<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.coremedia.blueprint</groupId>
  <artifactId>chef</artifactId>
  <packaging>pom</packaging>
  <version>1-SNAPSHOT</version>

  <properties>
    <application-plugin.version>2.8.3</application-plugin.version>
    <commerce-adapter-mock.version>1.2.5</commerce-adapter-mock.version>
    <commerce-adapter-hybris.version>1.1.12</commerce-adapter-hybris.version>
    <commerce-adapter-sfcc.version>1.1.10</commerce-adapter-sfcc.version>
    <commerce-adapter-wcs.version>1.2.9</commerce-adapter-wcs.version>
  </properties>

  <!--
   | The following list of package dependencies is listed here only to allow building the workspace concurrently and
   | secure that this module is build at the end when all packages have been built
   -->
  <dependencies>
    <dependency>
      <groupId>${project.groupId}.boot</groupId>
      <artifactId>content-server-app</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>content-server-blueprint-config</artifactId>
      <version>${project.version}</version>
      <type>zip</type>
    </dependency>
    <dependency>
      <groupId>${project.groupId}.boot</groupId>
      <artifactId>cae-feeder-app</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}.boot</groupId>
      <artifactId>content-feeder-app</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}.boot</groupId>
      <artifactId>workflow-server-app</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>workflowserver-blueprint-config</artifactId>
      <version>${project.version}</version>
      <type>zip</type>
    </dependency>
    <dependency>
      <groupId>${project.groupId}.boot</groupId>
      <artifactId>cae-live-app</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}.boot</groupId>
      <artifactId>cae-preview-app</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}.boot</groupId>
      <artifactId>elastic-worker-app</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}.boot</groupId>
      <artifactId>user-changes-app</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}.boot</groupId>
      <artifactId>headless-server-app</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>com.coremedia.commerce.adapter.base</groupId>
      <artifactId>adapter-mock-app</artifactId>
      <version>${commerce-adapter-mock.version}</version>
    </dependency>
    <dependency>
      <groupId>com.coremedia.commerce.adapter.hybris</groupId>
      <artifactId>adapter-hybris-app</artifactId>
      <version>${commerce-adapter-hybris.version}</version>
    </dependency>
    <dependency>
      <groupId>com.coremedia.commerce.adapter.sfcc</groupId>
      <artifactId>adapter-sfcc-app</artifactId>
      <version>${commerce-adapter-sfcc.version}</version>
    </dependency>
    <dependency>
      <groupId>com.coremedia.commerce.adapter.wcs</groupId>
      <artifactId>adapter-wcs-app</artifactId>
      <version>${commerce-adapter-wcs.version}</version>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>cms-tools-application</artifactId>
      <version>${project.version}</version>
      <type>zip</type>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>wfs-tools-application</artifactId>
      <version>${project.version}</version>
      <type>zip</type>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>mls-tools-application</artifactId>
      <version>${project.version}</version>
      <type>zip</type>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>rls-tools-application</artifactId>
      <version>${project.version}</version>
      <type>zip</type>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>caefeeder-tools-application</artifactId>
      <version>${project.version}</version>
      <type>zip</type>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>theme-importer-application</artifactId>
      <version>${project.version}</version>
      <type>zip</type>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>solr-config</artifactId>
      <version>${project.version}</version>
      <type>zip</type>
    </dependency>

    <!-- TO FIX BUILD ORDER-->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>test-data</artifactId>
      <version>${project.version}</version>
      <type>pom</type>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>frontend</artifactId>
      <version>${project.version}</version>
      <type>pom</type>
    </dependency>
  </dependencies>

  <!-- Use -DwithoutJangarooApp=true to exclude jangaroo apps. -->
  <profiles>
    <profile>
      <id>with-jangaroo-app</id>
      <activation>
        <property>
          <name>!withoutJangarooApp</name>
          <value>!true</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>${project.groupId}.boot</groupId>
          <artifactId>studio-server-app</artifactId>
          <version>${project.version}</version>
        </dependency>
        <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>studio-base-app</artifactId>
          <version>${project.version}</version>
        </dependency>

        <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>studio-app</artifactId>
          <version>${project.version}</version>
        </dependency>
      </dependencies>
    </profile>
  </profiles>

  <build>
    <finalName>deployment-archive</finalName>
    <plugins>
      <plugin>
        <!--We are skipping any enforcer checks here, as jars deployed to the container runtime classpath must not match-->
        <!--compile time versions.-->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.0.0-M2</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.1</version>
        <executions>
          <execution>
            <id>copy-deployables</id>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <excludeTransitive>true</excludeTransitive>
              <outputDirectory>${project.build.directory}/maven-repo</outputDirectory>
              <useRepositoryLayout>true</useRepositoryLayout>
              <includeTypes>jar,zip,war</includeTypes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>create-deployment-archive</id>
            <goals>
              <goal>single</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <descriptors>
                <descriptor>src/assembly/deployment-archive.xml</descriptor>
              </descriptors>
              <attach>false</attach>
              <recompressZippedFiles>false</recompressZippedFiles>
              <appendAssemblyId>false</appendAssemblyId>
              <tarLongFileMode>posix</tarLongFileMode>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.coremedia.maven</groupId>
        <artifactId>coremedia-application-maven-plugin</artifactId>
        <version>${application-plugin.version}</version>
        <extensions>true</extensions>
      </plugin>
    </plugins>
  </build>
  <repositories>
    <repository>
      <id>coremedia.external.releases</id>
      <name>CoreMedia CMS</name>
      <url>https://repository.coremedia.com/nexus/content/groups/cms/</url>
      <layout>default</layout>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>
</project>
