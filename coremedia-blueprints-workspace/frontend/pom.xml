<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.coremedia.blueprint</groupId>
  <artifactId>frontend</artifactId>
  <version>1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <properties>
    <yarnCacheFolder />
  </properties>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.0.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.1.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>3.0.0-M1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
          <configuration>
            <filesets>
              <fileset>
                <directory>overlays</directory>
                <includes>
                  <include>**/*.*</include>
                </includes>
                <followSymlinks>false</followSymlinks>
              </fileset>
              <!-- node is created by frontend-maven-plugin -->
              <fileset>
                <directory>node</directory>
              </fileset>
            </filesets>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.github.eirslett</groupId>
          <artifactId>frontend-maven-plugin</artifactId>
          <version>1.9.1</version>
          <configuration>
            <nodeVersion>v10.18.1</nodeVersion><!-- LTS -->
            <yarnVersion>v1.21.1</yarnVersion>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>code-completion</id>
      <!-- dependencies needed for code-completion in IDEs only -->
      <dependencies>
        <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>cae-extension-dependencies</artifactId>
          <version>${project.version}</version>
          <type>pom</type>
          <scope>provided</scope>
        </dependency>
      </dependencies>
    </profile>

    <!-- Use -DskipThemes to skip frontend generation. -->
    <profile>
      <id>development-themes</id>
      <activation>
        <property>
          <name>!skipThemes</name>
          <value>!true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <!-- clean node and node_modules in all themes -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-clean-plugin</artifactId>
            <configuration>
              <filesets>
                <fileset>
                  <directory>${project.basedir}</directory>
                  <includes>
                    <include>node/**</include>
                  </includes>
                  <followSymlinks>false</followSymlinks>
                </fileset>
              </filesets>
            </configuration>
          </plugin>
          <!-- build themes and copy everything to the target folder -->
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <configuration>
              <!--
                Do not pass proxy config. Otherwise lerna will complain about unknown parameters.
              -->
              <yarnInheritsProxyConfigFromMaven>false</yarnInheritsProxyConfigFromMaven>
              <environmentVariables>
                <YARN_CACHE_FOLDER>${yarnCacheFolder}</YARN_CACHE_FOLDER>
              </environmentVariables>
            </configuration>
            <executions>
              <execution>
                <id>install-node-and-yarn</id>
                <goals>
                  <goal>install-node-and-yarn</goal>
                </goals>
              </execution>
              <execution>
                <id>install-node-modules</id>
                <goals>
                  <goal>yarn</goal>
                </goals>
                <configuration>
                  <!--
                   Pass proxy config for yarn install as lerna is not used here. (the installation is
                   the only interesting part regarding proxies anyway)
                  -->
                  <yarnInheritsProxyConfigFromMaven>true</yarnInheritsProxyConfigFromMaven>
                  <!--
                    1) run "install"

                    2) pass parameters to lerna:
                    - do not print out any non errors as the maven-frontend-plugin does not distinct error levels
                    - do not animate progress to avoid polluting the maven log
                  -->
                  <arguments>install --loglevel=error --no-progress</arguments>
                </configuration>
              </execution>
              <execution>
                <id>build-themes</id>
                <goals>
                  <goal>yarn</goal>
                </goals>
                <phase>prepare-package</phase>
                <configuration>
                  <!--
                    1) run the "build" script in production environment

                    2) pass parameters to lerna:
                    - do not print out any non errors as the maven-frontend-plugin does not distinct error levels
                    - make sure that the npm-client is set to yarn
                  -->
                  <arguments>build --loglevel=error --npm-client=yarn</arguments>
                </configuration>
              </execution>
              <execution>
                <id>build-frontend-zip</id>
                <goals>
                  <goal>yarn</goal>
                </goals>
                <phase>package</phase>
                <configuration>
                  <!--
                    1) run the "build-frontend-zip" script in production environment

                    2) pass parameters to lerna:
                    - do not print out any non errors as the maven-frontend-plugin does not distinct error levels
                    - make sure that the npm-client is set to yarn
                  -->
                  <arguments>build-frontend-zip --loglevel=error --npm-client=yarn</arguments>
                </configuration>
              </execution>
              <execution>
                <id>run-unit-tests</id>
                <goals>
                  <goal>yarn</goal>
                </goals>
                <phase>test</phase>
                <configuration>
                  <!--
                    1) run the "test" script

                    2) pass parameters to lerna:
                    - do not print out any non errors as the maven-frontend-plugin does not distinct error levels
                    - make sure that the npm-client is set to yarn
                  -->
                  <arguments>test --loglevel=error --npm-client=yarn</arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>check-dependencies-yarn</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>install-node-and-yarn</id>
                <goals>
                  <goal>install-node-and-yarn</goal>
                </goals>
              </execution>
              <execution>
                <id>check-dependencies-yarn-audit</id>
                <phase>test</phase>
                <goals>
                  <goal>yarn</goal>
                </goals>
                <configuration>
                  <arguments>audit --level=high --summary --json</arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
